name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build --file recorder.Dockerfile \
            --build-arg FTP_HOST="${{ vars.FTP_HOST }}" \
            --build-arg FTP_USER="${{ vars.FTP_USER }}" \
            -t pi-recorder .

      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PW }}" | docker login --username ${{ secrets.DOCKER_HUB_USER }} --password-stdin
          docker tag pi-recorder goodmanisltd/pi-recorder:latest
          docker push goodmanisltd/pi-recorder:latest

      - name: Add host
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.PEM_KEY}}
          ssh-host: ${{ vars.PI_SSH_HOST }}

      - name: Transfer FTP password
        run: |
          echo ${{secrets.FTP_PASSWORD}} > ftp.txt
          scp ftp.txt ${{ vars.PI_SSH_USER }}@${{ vars.PI_SSH_HOST }}:./home/key

      - name: Pull and run Docker image on Raspberry Pi
        run: |
          ssh ${{ vars.PI_SSH_USER }}@${{ vars.PI_SSH_HOST }} \
          'if ! command -v docker &> /dev/null; then \
            sudo apt-get update && \
            curl -L https://get.docker.io | bash && \
            sudo usermod-aG docker $USER; \
          fi; \
          sudo systemctl start docker;
          docker stop goodmanisltd/pi-recorder || true; \
          docker pull goodmanisltd/pi-recorder:latest; \
          docker run --restart always -it --rm -e FTP_PASSWORD=$(cat /home/key/ftp.txt) goodmanisltd/pi-recorder:latest'
