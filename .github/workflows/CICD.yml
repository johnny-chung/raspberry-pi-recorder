name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build --file recorder.Dockerfile \
            --build-arg FTP_HOST="${{ secrets.FTP_HOST }}" \
            --build-arg FTP_USER="${{ secrets.FTP_USER }}" \
            -t pi-recorder .

      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PW }}" | docker login --username ${{ secrets.DOCKER_HUB_USER }} --password-stdin
          docker tag pi-recorder goodmanisltd/pi-recorder:latest
          docker push goodmanisltd/pi-recorder:latest

      - name: Transfer FTP password
        run: |
          echo ${{ secrets.FTP_PASSWORD }} > ftp.txt
          scp ftp.txt ${{ secrets.PI_SSH_USER }}@${{ secrets.PI_SSH_HOST }}:/home/key/ftp.txt

      - name: Create PEM file
        run: echo "${{ secrets.PEM_KEY }}" > pem_key.pem
        env:
          PEM_KEY: ${{ secrets.PEM_KEY }}

      - name: Pull and run Docker image on Raspberry Pi
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PI_SSH_HOST }}
          username: ${{ secrets.PI_SSH_USER }}
          key: pem_key.pem
          script: |
            echo "ssh success"
            "if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
            fi
            docker stop pi-recorder || true
            docker pull goodmanisltd/pi-recorder:latest
            docker run -- restart always -it --rm -e FTP_PASSWORD=$(cat /home/key/ftp.txt) goodmanisltd/pi-recorder:latest"
